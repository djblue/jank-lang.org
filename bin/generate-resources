#!/usr/bin/env bash

set -euo pipefail

generated_dir="resources/generated"
generated_img_dir="${generated_dir}/img"
generated_html_dir="${generated_dir}/html"

function resource-type
{
  case "${1}"
  in
    clj | jank)
      echo "clojure"
      ;;
    plot.clj)
      echo "clojure-plot"
      ;;
    hpp | cpp)
      echo "cpp"
      ;;
    md)
      echo "markdown"
      ;;
    svg)
      echo "svg"
      ;;
    png)
      echo "png"
      ;;
    *)
      echo "sh"
  esac
}

# $1 = file
# $2 = resource type
# $3 = file sans extension
function render
{
  local file resource_type file_sans_ext
  file="$1"
  resource_type="$2"
  file_sans_ext="$3"
  case "${resource_type}"
  in
    markdown)
      ;;
    clojure-plot)
      mkdir -p "$(dirname "${generated_img_dir}/${file_sans_ext}")"
      ./bin/plot "${file}" "${generated_img_dir}/${file_sans_ext}.svg" 2>/dev/null
      # Optimizing generated SVGs readies them for viewing. Without this step,
      # they won't render properly.
      ./bin/optimize-resources "${generated_img_dir}/${file_sans_ext}.svg"
      ;;
    # TODO: Keep this? Or put the images elsewhere?
    svg|png)
      mkdir -p "$(dirname "${generated_img_dir}/${file_sans_ext}")"
      cp -f "${file}" "${generated_img_dir}/${file_sans_ext}.${resource_type}"
      ;;
    *)
      mkdir -p "$(dirname "${generated_html_dir}/${file_sans_ext}")"
      ./bin/highlight "${file}" "${resource_type}" > "${generated_html_dir}/${file_sans_ext}.html"
      ;;
  esac
}

function main
{
  rm -rf "${generated_dir}"
  mkdir -p "${generated_dir}" "${generated_img_dir}" "${generated_html_dir}"

  local resource_files
  resource_files="$(find $@ -type f)"
  for file in ${resource_files};
  do
    local base_file file_sans_ext ext resource_type
    base_file="${file##resources/src/}"
    file_sans_ext="${base_file%.*}"
    ext="${base_file#*.}"
    resource_type="$(resource-type "${ext}")"

    # TODO: If the output is the same timestamp as the input, skip
    printf "\r$(tput el || true)Generating %s â€¦" "${base_file}"

    render "${file}" "${resource_type}" "${file_sans_ext}"
  done
  printf "\r"
}
main $@
